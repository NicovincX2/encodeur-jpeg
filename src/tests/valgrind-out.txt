==32905== Memcheck, a memory error detector
==32905== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==32905== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==32905== Command: ./test_file
==32905== Parent PID: 2166
==32905== 
--32905-- 
--32905-- Valgrind options:
--32905--    --leak-check=full
--32905--    --show-leak-kinds=all
--32905--    --track-origins=yes
--32905--    --verbose
--32905--    --log-file=valgrind-out.txt
--32905-- Contents of /proc/version:
--32905--   Linux version 5.5.0-1parrot1-amd64 (team@parrotsec.org) (gcc version 9.3.0 (Debian 9.3.0-10)) #1 SMP Parrot 5.5.17-1parrot1 (2020-04-25)
--32905-- 
--32905-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-ssse3-avx
--32905-- Page sizes: currently 4096, max supported 4096
--32905-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--32905-- Reading syms from /home/n0way/Documents/Projets/encodeur-jpeg/src/tests/test_file
--32905-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.30.so
--32905--   Considering /usr/lib/debug/.build-id/8a/980b57d17a1e050e7646f9604e8a96824d3691.debug ..
--32905--   .. build-id is valid
--32905-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--32905--   Considering /usr/lib/debug/.build-id/80/5d052772dc3c48dbe4654094fcd7ddddfdb87a.debug ..
--32905--   .. build-id is valid
--32905--    object doesn't have a dynamic symbol table
--32905-- Scheduler: using generic scheduler lock implementation.
--32905-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==32905== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-32905-by-n0way-on-???
==32905== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-32905-by-n0way-on-???
==32905== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-32905-by-n0way-on-???
==32905== 
==32905== TO CONTROL THIS PROCESS USING vgdb (which you probably
==32905== don't want to do, unless you know exactly what you're doing,
==32905== or are doing some strange experiment):
==32905==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=32905 ...command...
==32905== 
==32905== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==32905==   /path/to/gdb ./test_file
==32905== and then give GDB the following command
==32905==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=32905
==32905== --pid is optional if only one valgrind process is running
==32905== 
--32905-- REDIR: 0x401e5b0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9a82 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--32905-- REDIR: 0x401e390 (ld-linux-x86-64.so.2:index) redirected to 0x580c9a9c (vgPlain_amd64_linux_REDIR_FOR_index)
--32905-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--32905--   Considering /usr/lib/debug/.build-id/1f/dbd27e1b18006ce47917636dcc0d35bd6729c5.debug ..
--32905--   .. build-id is valid
--32905-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--32905--   Considering /usr/lib/debug/.build-id/0c/9a6e9d3907392310d89e285e3d6edaa3802ec5.debug ..
--32905--   .. build-id is valid
==32905== WARNING: new redirection conflicts with existing -- ignoring it
--32905--     old: 0x0401e5b0 (strlen              ) R-> (0000.0) 0x580c9a82 vgPlain_amd64_linux_REDIR_FOR_strlen
--32905--     new: 0x0401e5b0 (strlen              ) R-> (2007.0) 0x04839d80 strlen
--32905-- REDIR: 0x401add0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ae40 (strcmp)
--32905-- REDIR: 0x401eaf0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x483e860 (mempcpy)
--32905-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.30.so
--32905--   Considering /usr/lib/debug/.build-id/40/f80fd23b36ba3a7e20f63d615dc1aca83f4262.debug ..
--32905--   .. build-id is valid
--32905-- REDIR: 0x48f8710 (libc.so.6:memmove) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7ad0 (libc.so.6:strncpy) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8a30 (libc.so.6:strcasecmp) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7420 (libc.so.6:strcat) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7b30 (libc.so.6:rindex) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f9db0 (libc.so.6:rawmemchr) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x4911fe0 (libc.so.6:wmemchr) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x4911ba0 (libc.so.6:wcscmp) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8870 (libc.so.6:mempcpy) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f86a0 (libc.so.6:bcmp) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7a70 (libc.so.6:strncmp) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f74d0 (libc.so.6:strcmp) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f87d0 (libc.so.6:memset) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x4911b60 (libc.so.6:wcschr) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f79d0 (libc.so.6:strnlen) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f75a0 (libc.so.6:strcspn) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8a80 (libc.so.6:strncasecmp) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7540 (libc.so.6:strcpy) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8bd0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x49131c0 (libc.so.6:wcsnlen) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x4911be0 (libc.so.6:wcscpy) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7b70 (libc.so.6:strpbrk) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7480 (libc.so.6:index) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7990 (libc.so.6:strlen) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48fe160 (libc.so.6:memrchr) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8ad0 (libc.so.6:strcasecmp_l) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8660 (libc.so.6:memchr) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x4911c80 (libc.so.6:wcslen) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f7e10 (libc.so.6:strspn) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f89d0 (libc.so.6:stpncpy) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8970 (libc.so.6:stpcpy) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f9df0 (libc.so.6:strchrnul) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x48f8b20 (libc.so.6:strncasecmp_l) redirected to 0x482c1b0 (_vgnU_ifunc_wrapper)
--32905-- REDIR: 0x4906de0 (libc.so.6:__strrchr_sse2) redirected to 0x48397d0 (__strrchr_sse2)
--32905-- REDIR: 0x48f3a10 (libc.so.6:malloc) redirected to 0x4836710 (malloc)
--32905-- REDIR: 0x4906bd0 (libc.so.6:__strchrnul_sse2) redirected to 0x483e390 (strchrnul)
--32905-- REDIR: 0x4910ef0 (libc.so.6:__mempcpy_sse2_unaligned) redirected to 0x483e4a0 (mempcpy)
--32905-- REDIR: 0x48f4050 (libc.so.6:free) redirected to 0x4837940 (free)
--32905-- REDIR: 0x49070d0 (libc.so.6:__strlen_sse2) redirected to 0x4839cc0 (__strlen_sse2)
==32905== Invalid read of size 8
==32905==    at 0x109351: afficher_file (file.c:62)
==32905==    by 0x1095FB: main (test_file.c:33)
==32905==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==32905== 
==32905== 
==32905== Process terminating with default action of signal 11 (SIGSEGV)
==32905==  Access not within mapped region at address 0x0
==32905==    at 0x109351: afficher_file (file.c:62)
==32905==    by 0x1095FB: main (test_file.c:33)
==32905==  If you believe this happened as a result of a stack
==32905==  overflow in your program's main thread (unlikely but
==32905==  possible), you can try to increase the size of the
==32905==  main thread stack using the --main-stacksize= flag.
==32905==  The main thread stack size used in this run was 8388608.
==32905== 
==32905== HEAP SUMMARY:
==32905==     in use at exit: 0 bytes in 0 blocks
==32905==   total heap usage: 10 allocs, 10 frees, 1,192 bytes allocated
==32905== 
==32905== All heap blocks were freed -- no leaks are possible
==32905== 
==32905== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==32905== 
==32905== 1 errors in context 1 of 1:
==32905== Invalid read of size 8
==32905==    at 0x109351: afficher_file (file.c:62)
==32905==    by 0x1095FB: main (test_file.c:33)
==32905==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==32905== 
==32905== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
